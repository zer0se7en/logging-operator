name: E2E tests

on:
  push:
    branches:
      - master
      - "release-[0-9]+.[0-9]+*"
  pull_request:

env:
  GO_VERSION: '1.20'
  KUBECTL_VERSION: 'v1.24.1'

jobs:
  build:
    name: Image build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: controller:local
          outputs: type=docker,dest=/tmp/controller.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: controller
          path: /tmp/controller.tar

  go:
    name: Go end2end tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: controller
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/controller.tar
          docker image ls -a

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBECTL_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make docker-build
        run: make docker-build

      - name: Run e2e tests
        run: make test-e2e

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: go-e2e-test-cluster-logs
          path: build/_test
          retention-days: 5

  chart-minio:
    name: Shell script tests with chart install
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: controller
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/controller.tar
          docker image ls -a

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: ${{ env.KUBECTL_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Make docker-build
        run: make docker-build

      - name: Make setup
        run: make kind-cluster stern

      - name: Kubernetes setup
        run: |
          kubectl create namespace logging
          
          kubectl create -n logging -f hack/minio.yaml
          kubectl wait -n logging --for=condition=available deployment/minio-deployment --timeout=120s
          minio="$(kubectl get pod -n logging -l app=minio -o 'jsonpath={.items[0].metadata.name}')"
          kubectl wait -n logging --for=condition=Ready pod "${minio}" --timeout=120s
          
          kubectl create -n logging -f hack/minio-mc.yaml
          kubectl wait -n logging --for=condition=available deployment/minio-mc-deployment --timeout=120s
          mc_pod="$(kubectl get pod -n logging -l app=minio-mc -o 'jsonpath={.items[0].metadata.name}')"
          kubectl wait -n logging --for=condition=Ready pod "${mc_pod}" --timeout=120s
          
          kubectl exec -n logging "${mc_pod}" -- \
            mc config host add minio \
            'http://minio-service.logging.svc.cluster.local:9000' \
            'minio_access_key' \
            'minio_secret_key'

      - name: Test
        run: hack/test.sh

      - name: Print last 10k kubernetes logs from default and logging namespaces
        if: always()
        run: |
          mkdir -p build/_test
          bin/stern -n default,logging ".*" --tail 100000 --no-follow > build/_test/cluster.logs

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: script-e2e-test-cluster-logs
          path: build/_test
          retention-days: 5
